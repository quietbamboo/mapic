<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/US2ValidatorUIProtocol.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/US2ValidatorUIProtocol</TokenIdentifier>
			<Abstract>A text user interface element must conform to US2ValidatorUIProtocol protocol methods.
At the moment the framework supports UITextField and UITextView by using US2ValidatorTextField
and US2ValidatorTextView.</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>
			
			<NodeRef refid="25"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/setDelegate:</TokenIdentifier>
			<Abstract>A delegate</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (void)setDelegate:(id)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>delegate</Name>
					<Abstract>A delegate</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/delegate</TokenIdentifier>
			<Abstract>Return a delegate</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (id)delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/setValidator:</TokenIdentifier>
			<Abstract>Validator to check the text of text UI conforming US2ValidatorUIProtocol</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (void)setValidator:(US2Validator *)validator</Declaration>
			<Parameters>
				<Parameter>
					<Name>validator</Name>
					<Abstract>Validator to check the text of text UI conforming US2ValidatorUIProtocol</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setValidator:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/validator</TokenIdentifier>
			<Abstract>Set validator</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (US2Validator *)validator</Declaration>
			
			
			<Anchor>//api/name/validator</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/setShouldAllowViolation:</TokenIdentifier>
			<Abstract>Determines whether text inputs can be made either by violating the conditions.
Is this parameter NO it overrides the 'shouldAllowViolation' parameter of
the conditions added to the validator. If set to YES the 'shouldAllowViolation'
parameters of the conditions considered.</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (void)setShouldAllowViolation:(BOOL)shouldAllowViolation</Declaration>
			<Parameters>
				<Parameter>
					<Name>shouldAllowViolation</Name>
					<Abstract>Boolean value</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setShouldAllowViolation:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/shouldAllowViolation</TokenIdentifier>
			<Abstract>Set boolean value</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (BOOL)shouldAllowViolation</Declaration>
			
			
			<Anchor>//api/name/shouldAllowViolation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/isValid</TokenIdentifier>
			<Abstract>Return whether the text is valid.</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (BOOL)isValid</Declaration>
			
			<ReturnValue><Abstract>Returns the valid state of the text field</Abstract></ReturnValue>
			<Anchor>//api/name/isValid</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/setValidateOnFocusLossOnly:</TokenIdentifier>
			<Abstract>Determines whether the text has to be validated after leaving the text field
or while editing. After a violation appeared after leaving the text field
the text field will from now on validate while editing. Because the user
knows now that a violation occurrs when using this text field.</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (void)setValidateOnFocusLossOnly:(BOOL)validateOnFocusLossOnly</Declaration>
			<Parameters>
				<Parameter>
					<Name>validateOnFocusLossOnly</Name>
					<Abstract>Boolean value</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setValidateOnFocusLossOnly:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/validateOnFocusLossOnly</TokenIdentifier>
			<Abstract>Set boolean value</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (BOOL)validateOnFocusLossOnly</Declaration>
			
			
			<Anchor>//api/name/validateOnFocusLossOnly</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/setText:</TokenIdentifier>
			<Abstract>String to set as text to text UI</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (void)setText:(NSString *)text</Declaration>
			<Parameters>
				<Parameter>
					<Name>text</Name>
					<Abstract>String to set as text to text UI</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setText:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/text</TokenIdentifier>
			<Abstract>Set string value</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (NSString *)text</Declaration>
			
			
			<Anchor>//api/name/text</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/setFrame:</TokenIdentifier>
			<Abstract>Boundary to set as frame to text UI</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (void)setFrame:(CGRect)frame</Declaration>
			<Parameters>
				<Parameter>
					<Name>frame</Name>
					<Abstract>Boundary to set as frame to text UI</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setFrame:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/US2ValidatorUIProtocol/frame</TokenIdentifier>
			<Abstract>Set CGRect value</Abstract>
			<DeclaredIn>US2ValidatorUIProtocol.h</DeclaredIn>			
			
			<Declaration>- (CGRect)frame</Declaration>
			
			
			<Anchor>//api/name/frame</Anchor>
		</Token>
		
	</File>
</Tokens>